#lang racket
(require "../cassius/main.rkt")

(print-rules
 #:header
 "html { background-color: #f1f1f1;}
body { font-size: 18px; line-height: 1.333; text-rendering: optimizeLegibility; font-family: 'PT Serif', serif;}
pre { font-family: 'Open Sans Light', 'Inconsolata', 'Deja Vu Sans Mono', monospace; font-weight: 300;}
h1 { font-family: 'Open Sans Semibold', 'Deja Vu Sans', 'Georgia', sans; font-weight: 600;
     font-size: 24px; line-height: 1; letter-spacing: -.03em;}
p { text-align: justify; -moz-hyphens: auto; -webkit-hyphens: auto; hyphens: auto;}"

(solve
`(

,@(make-preamble)
,@(make-rule 'BODY-rule 'BODY)
,@(make-rule 'DIV-rule 'DIV)
,@(make-rule 'H1-rule 'H1)
,@(make-rule 'P-rule 'P)
,@(make-rule 'PRE-rule 'PRE)

,@(make-dom 'html0.2577661201012946 'doc0.6561059409840904
            '([<BODY> BODY0.6673003669211357 BODY-rule]
              ([<DIV> DIV0.32692574433047483 DIV-rule]
               ([<H1> H10.8001806927372528 H1-rule]
                ([<> line0.663108918863126])) 
               ([<P> P0.4196245347598335 P-rule]
                ([<> line0.004050135232036456])) 
               ([<DIV> DIV0.9740061795609466 DIV-rule]
                ([<PRE> PRE0.06318375491103967 PRE-rule]
                 ([<> line0.8150350820423058]) 
                 ([<> line0.7408018627444731]))) 
               ([<P> P0.8216760075392059 P-rule]
                ([<> line0.18183329716199792]) 
                ([<> line0.9890331526471597])) 
               ([<DIV> DIV0.9313995365229619 DIV-rule]
                ([<PRE> PRE0.8106411677588024 PRE-rule]
                 ([<> line0.48824076720422593]) 
                 ([<> line0.7043775888793943]) 
                 ([<> line0.5784952535256321]) 
                 ([<> line0.3974532162481076]) 
                 ([<> line0.3402218945496419]) 
                 ([<> line0.16202928258320648]))) 
               ([<P> P0.897681385626159 P-rule]
                ([<> line0.975464269518794]) 
                ([<> line0.04204972878527424])) 
               ([<DIV> DIV0.04163848568012818 DIV-rule]
                ([<PRE> PRE0.6533785035300099 PRE-rule]
                 ([<> line0.9540013504851798]) 
                 ([<> line0.2818084329653884]))))))

(assert (! (= (w-e (doc0.6561059409840904f html0.2577661201012946)) 900) :named html0.2577661201012946-width))
(assert (! (= (x-e (doc0.6561059409840904f BODY0.6673003669211357)) 126) :named BODY0.6673003669211357-x))
(assert (! (= (y-e (doc0.6561059409840904f BODY0.6673003669211357)) 36) :named BODY0.6673003669211357-y))
(assert (! (= ,(vw '(doc0.6561059409840904f BODY0.6673003669211357)) 648) :named BODY0.6673003669211357-w))
(assert (! (= ,(vh '(doc0.6561059409840904f BODY0.6673003669211357)) 731.6) :named BODY0.6673003669211357-h))
(assert (! (= (fgc (doc0.6561059409840904f BODY0.6673003669211357)) (color |#x2e3436|)) :named BODY0.6673003669211357-fg))
(assert (! (= (bgc (doc0.6561059409840904f BODY0.6673003669211357)) transparent) :named BODY0.6673003669211357-bg))
(assert (! (= (x-e (doc0.6561059409840904f DIV0.32692574433047483)) 135) :named DIV0.32692574433047483-x))
(assert (! (= (y-e (doc0.6561059409840904f DIV0.32692574433047483)) 36) :named DIV0.32692574433047483-y))
(assert (! (= ,(vw '(doc0.6561059409840904f DIV0.32692574433047483)) 630) :named DIV0.32692574433047483-w))
(assert (! (= ,(vh '(doc0.6561059409840904f DIV0.32692574433047483)) 582) :named DIV0.32692574433047483-h))
(assert (! (= (fgc (doc0.6561059409840904f DIV0.32692574433047483)) (color |#x2e3436|)) :named DIV0.32692574433047483-fg))
(assert (! (= (bgc (doc0.6561059409840904f DIV0.32692574433047483)) transparent) :named DIV0.32692574433047483-bg))
(assert (! (= (x-e (doc0.6561059409840904f H10.8001806927372528)) 135) :named H10.8001806927372528-x))
(assert (! (= (y-e (doc0.6561059409840904f H10.8001806927372528)) 36) :named H10.8001806927372528-y))
(assert (! (= ,(vw '(doc0.6561059409840904f H10.8001806927372528)) 630) :named H10.8001806927372528-w))
(assert (! (= ,(vh '(doc0.6561059409840904f H10.8001806927372528)) 24) :named H10.8001806927372528-h))
(assert (! (= (fgc (doc0.6561059409840904f H10.8001806927372528)) (color |#x555753|)) :named H10.8001806927372528-fg))
(assert (! (= (bgc (doc0.6561059409840904f H10.8001806927372528)) transparent) :named H10.8001806927372528-bg))
(assert (! (= (x-l (doc0.6561059409840904f line0.663108918863126)) 135) :named line0.663108918863126-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.663108918863126)) 31.5) :named line0.663108918863126-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.663108918863126)) 273.8) :named line0.663108918863126-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.663108918863126)) 33) :named line0.663108918863126-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.663108918863126)) -9) :named line0.663108918863126-gap-l))
(assert (! (= (x-e (doc0.6561059409840904f P0.4196245347598335)) 135) :named P0.4196245347598335-x))
(assert (! (= (y-e (doc0.6561059409840904f P0.4196245347598335)) 78) :named P0.4196245347598335-y))
(assert (! (= ,(vw '(doc0.6561059409840904f P0.4196245347598335)) 630) :named P0.4196245347598335-w))
(assert (! (= ,(vh '(doc0.6561059409840904f P0.4196245347598335)) 24) :named P0.4196245347598335-h))
(assert (! (= (fgc (doc0.6561059409840904f P0.4196245347598335)) (color |#x2e3436|)) :named P0.4196245347598335-fg))
(assert (! (= (bgc (doc0.6561059409840904f P0.4196245347598335)) transparent) :named P0.4196245347598335-bg))
(assert (! (= (x-l (doc0.6561059409840904f line0.004050135232036456)) 135) :named line0.004050135232036456-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.004050135232036456)) 79.5) :named line0.004050135232036456-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.004050135232036456)) 215) :named line0.004050135232036456-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.004050135232036456)) 21) :named line0.004050135232036456-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.004050135232036456)) 3) :named line0.004050135232036456-gap-l))
(assert (! (= (x-e (doc0.6561059409840904f DIV0.9740061795609466)) 135) :named DIV0.9740061795609466-x))
(assert (! (= (y-e (doc0.6561059409840904f DIV0.9740061795609466)) 123.6) :named DIV0.9740061795609466-y))
(assert (! (= ,(vw '(doc0.6561059409840904f DIV0.9740061795609466)) 630) :named DIV0.9740061795609466-w))
(assert (! (= ,(vh '(doc0.6561059409840904f DIV0.9740061795609466)) 66) :named DIV0.9740061795609466-h))
(assert (! (= (fgc (doc0.6561059409840904f DIV0.9740061795609466)) (color |#x2e3436|)) :named DIV0.9740061795609466-fg))
(assert (! (= (bgc (doc0.6561059409840904f DIV0.9740061795609466)) transparent) :named DIV0.9740061795609466-bg))
(assert (! (= (x-e (doc0.6561059409840904f PRE0.06318375491103967)) 135) :named PRE0.06318375491103967-x))
(assert (! (= (y-e (doc0.6561059409840904f PRE0.06318375491103967)) 123.6) :named PRE0.06318375491103967-y))
(assert (! (= ,(vw '(doc0.6561059409840904f PRE0.06318375491103967)) 630) :named PRE0.06318375491103967-w))
(assert (! (= ,(vh '(doc0.6561059409840904f PRE0.06318375491103967)) 66) :named PRE0.06318375491103967-h))
(assert (! (= (fgc (doc0.6561059409840904f PRE0.06318375491103967)) (color |#x2e3436|)) :named PRE0.06318375491103967-fg))
(assert (! (= (bgc (doc0.6561059409840904f PRE0.06318375491103967)) transparent) :named PRE0.06318375491103967-bg))
(assert (! (= (x-l (doc0.6561059409840904f line0.8150350820423058)) 144) :named line0.8150350820423058-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.8150350820423058)) 132.6) :named line0.8150350820423058-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.8150350820423058)) 199) :named line0.8150350820423058-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.8150350820423058)) 24) :named line0.8150350820423058-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.8150350820423058)) 0) :named line0.8150350820423058-gap-l))
(assert (! (= (x-l (doc0.6561059409840904f line0.7408018627444731)) 144) :named line0.7408018627444731-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.7408018627444731)) 156.6) :named line0.7408018627444731-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.7408018627444731)) 152) :named line0.7408018627444731-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.7408018627444731)) 24) :named line0.7408018627444731-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.7408018627444731)) 0) :named line0.7408018627444731-gap-l))
(assert (! (= (x-e (doc0.6561059409840904f P0.8216760075392059)) 135) :named P0.8216760075392059-x))
(assert (! (= (y-e (doc0.6561059409840904f P0.8216760075392059)) 220.2) :named P0.8216760075392059-y))
(assert (! (= ,(vw '(doc0.6561059409840904f P0.8216760075392059)) 630) :named P0.8216760075392059-w))
(assert (! (= ,(vh '(doc0.6561059409840904f P0.8216760075392059)) 48) :named P0.8216760075392059-h))
(assert (! (= (fgc (doc0.6561059409840904f P0.8216760075392059)) (color |#x2e3436|)) :named P0.8216760075392059-fg))
(assert (! (= (bgc (doc0.6561059409840904f P0.8216760075392059)) transparent) :named P0.8216760075392059-bg))
(assert (! (= (x-l (doc0.6561059409840904f line0.18183329716199792)) 135) :named line0.18183329716199792-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.18183329716199792)) 221.7) :named line0.18183329716199792-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.18183329716199792)) 630) :named line0.18183329716199792-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.18183329716199792)) 21) :named line0.18183329716199792-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.18183329716199792)) 3) :named line0.18183329716199792-gap-l))
(assert (! (= (x-l (doc0.6561059409840904f line0.9890331526471597)) 135) :named line0.9890331526471597-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.9890331526471597)) 245.7) :named line0.9890331526471597-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.9890331526471597)) 68) :named line0.9890331526471597-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.9890331526471597)) 21) :named line0.9890331526471597-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.9890331526471597)) 3) :named line0.9890331526471597-gap-l))
(assert (! (= (x-e (doc0.6561059409840904f DIV0.9313995365229619)) 135) :named DIV0.9313995365229619-x))
(assert (! (= (y-e (doc0.6561059409840904f DIV0.9313995365229619)) 289.8) :named DIV0.9313995365229619-y))
(assert (! (= ,(vw '(doc0.6561059409840904f DIV0.9313995365229619)) 630) :named DIV0.9313995365229619-w))
(assert (! (= ,(vh '(doc0.6561059409840904f DIV0.9313995365229619)) 162) :named DIV0.9313995365229619-h))
(assert (! (= (fgc (doc0.6561059409840904f DIV0.9313995365229619)) (color |#x2e3436|)) :named DIV0.9313995365229619-fg))
(assert (! (= (bgc (doc0.6561059409840904f DIV0.9313995365229619)) transparent) :named DIV0.9313995365229619-bg))
(assert (! (= (x-e (doc0.6561059409840904f PRE0.8106411677588024)) 135) :named PRE0.8106411677588024-x))
(assert (! (= (y-e (doc0.6561059409840904f PRE0.8106411677588024)) 289.8) :named PRE0.8106411677588024-y))
(assert (! (= ,(vw '(doc0.6561059409840904f PRE0.8106411677588024)) 630) :named PRE0.8106411677588024-w))
(assert (! (= ,(vh '(doc0.6561059409840904f PRE0.8106411677588024)) 162) :named PRE0.8106411677588024-h))
(assert (! (= (fgc (doc0.6561059409840904f PRE0.8106411677588024)) (color |#x2e3436|)) :named PRE0.8106411677588024-fg))
(assert (! (= (bgc (doc0.6561059409840904f PRE0.8106411677588024)) transparent) :named PRE0.8106411677588024-bg))
(assert (! (= (x-l (doc0.6561059409840904f line0.48824076720422593)) 144) :named line0.48824076720422593-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.48824076720422593)) 298.8) :named line0.48824076720422593-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.48824076720422593)) 349) :named line0.48824076720422593-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.48824076720422593)) 24) :named line0.48824076720422593-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.48824076720422593)) 0) :named line0.48824076720422593-gap-l))
(assert (! (= (x-l (doc0.6561059409840904f line0.7043775888793943)) 144) :named line0.7043775888793943-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.7043775888793943)) 322.8) :named line0.7043775888793943-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.7043775888793943)) 284) :named line0.7043775888793943-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.7043775888793943)) 24) :named line0.7043775888793943-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.7043775888793943)) 0) :named line0.7043775888793943-gap-l))
(assert (! (= (x-l (doc0.6561059409840904f line0.5784952535256321)) 144) :named line0.5784952535256321-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.5784952535256321)) 346.8) :named line0.5784952535256321-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.5784952535256321)) 302) :named line0.5784952535256321-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.5784952535256321)) 24) :named line0.5784952535256321-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.5784952535256321)) 0) :named line0.5784952535256321-gap-l))
(assert (! (= (x-l (doc0.6561059409840904f line0.3974532162481076)) 144) :named line0.3974532162481076-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.3974532162481076)) 370.8) :named line0.3974532162481076-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.3974532162481076)) 292) :named line0.3974532162481076-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.3974532162481076)) 24) :named line0.3974532162481076-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.3974532162481076)) 0) :named line0.3974532162481076-gap-l))
(assert (! (= (x-l (doc0.6561059409840904f line0.3402218945496419)) 144) :named line0.3402218945496419-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.3402218945496419)) 394.8) :named line0.3402218945496419-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.3402218945496419)) 362) :named line0.3402218945496419-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.3402218945496419)) 24) :named line0.3402218945496419-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.3402218945496419)) 0) :named line0.3402218945496419-gap-l))
(assert (! (= (x-l (doc0.6561059409840904f line0.16202928258320648)) 144) :named line0.16202928258320648-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.16202928258320648)) 418.8) :named line0.16202928258320648-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.16202928258320648)) 145) :named line0.16202928258320648-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.16202928258320648)) 24) :named line0.16202928258320648-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.16202928258320648)) 0) :named line0.16202928258320648-gap-l))
(assert (! (= (x-e (doc0.6561059409840904f P0.897681385626159)) 135) :named P0.897681385626159-x))
(assert (! (= (y-e (doc0.6561059409840904f P0.897681385626159)) 482.4) :named P0.897681385626159-y))
(assert (! (= ,(vw '(doc0.6561059409840904f P0.897681385626159)) 630) :named P0.897681385626159-w))
(assert (! (= ,(vh '(doc0.6561059409840904f P0.897681385626159)) 48) :named P0.897681385626159-h))
(assert (! (= (fgc (doc0.6561059409840904f P0.897681385626159)) (color |#x2e3436|)) :named P0.897681385626159-fg))
(assert (! (= (bgc (doc0.6561059409840904f P0.897681385626159)) transparent) :named P0.897681385626159-bg))
(assert (! (= (x-l (doc0.6561059409840904f line0.975464269518794)) 135) :named line0.975464269518794-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.975464269518794)) 483.9) :named line0.975464269518794-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.975464269518794)) 630) :named line0.975464269518794-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.975464269518794)) 21) :named line0.975464269518794-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.975464269518794)) 3) :named line0.975464269518794-gap-l))
(assert (! (= (x-l (doc0.6561059409840904f line0.04204972878527424)) 135) :named line0.04204972878527424-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.04204972878527424)) 507.9) :named line0.04204972878527424-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.04204972878527424)) 97) :named line0.04204972878527424-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.04204972878527424)) 21) :named line0.04204972878527424-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.04204972878527424)) 3) :named line0.04204972878527424-gap-l))
(assert (! (= (x-e (doc0.6561059409840904f DIV0.04163848568012818)) 135) :named DIV0.04163848568012818-x))
(assert (! (= (y-e (doc0.6561059409840904f DIV0.04163848568012818)) 552) :named DIV0.04163848568012818-y))
(assert (! (= ,(vw '(doc0.6561059409840904f DIV0.04163848568012818)) 630) :named DIV0.04163848568012818-w))
(assert (! (= ,(vh '(doc0.6561059409840904f DIV0.04163848568012818)) 66) :named DIV0.04163848568012818-h))
(assert (! (= (fgc (doc0.6561059409840904f DIV0.04163848568012818)) (color |#x2e3436|)) :named DIV0.04163848568012818-fg))
(assert (! (= (bgc (doc0.6561059409840904f DIV0.04163848568012818)) transparent) :named DIV0.04163848568012818-bg))
(assert (! (= (x-e (doc0.6561059409840904f PRE0.6533785035300099)) 135) :named PRE0.6533785035300099-x))
(assert (! (= (y-e (doc0.6561059409840904f PRE0.6533785035300099)) 552) :named PRE0.6533785035300099-y))
(assert (! (= ,(vw '(doc0.6561059409840904f PRE0.6533785035300099)) 630) :named PRE0.6533785035300099-w))
(assert (! (= ,(vh '(doc0.6561059409840904f PRE0.6533785035300099)) 66) :named PRE0.6533785035300099-h))
(assert (! (= (fgc (doc0.6561059409840904f PRE0.6533785035300099)) (color |#x2e3436|)) :named PRE0.6533785035300099-fg))
(assert (! (= (bgc (doc0.6561059409840904f PRE0.6533785035300099)) transparent) :named PRE0.6533785035300099-bg))
(assert (! (= (x-l (doc0.6561059409840904f line0.9540013504851798)) 144) :named line0.9540013504851798-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.9540013504851798)) 561) :named line0.9540013504851798-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.9540013504851798)) 199) :named line0.9540013504851798-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.9540013504851798)) 24) :named line0.9540013504851798-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.9540013504851798)) 0) :named line0.9540013504851798-gap-l))
(assert (! (= (x-l (doc0.6561059409840904f line0.2818084329653884)) 144) :named line0.2818084329653884-x))
(assert (! (= (y-l (doc0.6561059409840904f line0.2818084329653884)) 585) :named line0.2818084329653884-y))
(assert (! (= (w-l (doc0.6561059409840904f line0.2818084329653884)) 247) :named line0.2818084329653884-w))
(assert (! (= (h-l (doc0.6561059409840904f line0.2818084329653884)) 24) :named line0.2818084329653884-h))
(assert (! (= (gap-l (doc0.6561059409840904f line0.2818084329653884)) 0) :named line0.2818084329653884-gap-l))






(check-sat)
  
)))
