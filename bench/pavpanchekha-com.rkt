#lang racket
(require "../cassius/main.rkt")

(print-rules
 #:header
 "@import url(https://fonts.googleapis.com/css?family=Open+Sans:300,600|PT+Serif:400,400italic,700&subset=latin,greek,cyrillic);
html { background-color: #f1f1f1;}
body { font-family: 'PT Serif', serif;
       font-size: 15px; line-height: 1.2; text-rendering: optimizeLegibility;}
pre { font-family: 'Open Sans', 'Inconsolata', 'Deja Vu Sans Mono', monospace; font-weight: 300;}
h1 { font-family: 'Open Sans', 'Deja Vu Sans', 'Georgia', sans; font-weight: 600;
     font-size: 18pt; line-height: 1; letter-spacing: .125em;}
p { text-align: justify; -moz-hyphens: auto; -webkit-hyphens: auto; hyphens: auto;}"

(solve
`(


,@(make-preamble)
,@(make-rule 'BODY-rule 'BODY)
,@(make-rule 'DIV-rule 'DIV)
,@(make-rule 'H1-rule 'H1)
,@(make-rule 'P-rule 'P)
,@(make-rule 'svg-rule 'svg)
,@(make-rule 'PRE-rule 'PRE)


,@(make-dom 'html0.47562060773173764 'doc0.5248068705157151
            '([<BODY> BODY0.15989010611188836 BODY-rule]
              ([<DIV> DIV0.0565538151873729 DIV-rule]
               ([<H1> H10.4598987421500482 H1-rule])
               ([<P> P0.3226454785829057 P-rule])
               ([<P> P0.008074930785098244 P-rule])
               ([<svg> svg0.7647780787335617 svg-rule])
               ([<P> P0.02088725063448682 P-rule])
               ([<svg> svg0.37078069035747596 svg-rule])
               ([<P> P0.11882632446010155 P-rule])
               ([<P> P0.1298648258053663 P-rule])
               ([<P> P0.716431879403056 P-rule]))))


(assert (! (= (w (doc0.5248068705157151f html0.47562060773173764)) 1920) :named html0.47562060773173764-width))
(assert (! (= (x (doc0.5248068705157151f BODY0.15989010611188836)) 683.5) :named BODY0.15989010611188836-x))
(assert (! (= (y (doc0.5248068705157151f BODY0.15989010611188836)) 36) :named BODY0.15989010611188836-y))
(assert (! (= ,(vw '(doc0.5248068705157151f BODY0.15989010611188836)) 540) :named BODY0.15989010611188836-w))
(assert (! (= ,(vh '(doc0.5248068705157151f BODY0.15989010611188836)) 1082.0) :named BODY0.15989010611188836-h))
(assert (! (= (fgc (doc0.5248068705157151f BODY0.15989010611188836)) (color |#x2e3436|)) :named BODY0.15989010611188836-fg))
(assert (! (= (bgc (doc0.5248068705157151f BODY0.15989010611188836)) transparent) :named BODY0.15989010611188836-bg))
(assert (! (= (x (doc0.5248068705157151f DIV0.0565538151873729)) 691) :named DIV0.0565538151873729-x))
(assert (! (= (y (doc0.5248068705157151f DIV0.0565538151873729)) 36) :named DIV0.0565538151873729-y))
(assert (! (= ,(vw '(doc0.5248068705157151f DIV0.0565538151873729)) 525) :named DIV0.0565538151873729-w))
(assert (! (= ,(vh '(doc0.5248068705157151f DIV0.0565538151873729)) 999.5) :named DIV0.0565538151873729-h))
(assert (! (= (fgc (doc0.5248068705157151f DIV0.0565538151873729)) (color |#x2e3436|)) :named DIV0.0565538151873729-fg))
(assert (! (= (bgc (doc0.5248068705157151f DIV0.0565538151873729)) transparent) :named DIV0.0565538151873729-bg))
(assert (! (= (x (doc0.5248068705157151f H10.4598987421500482)) 691) :named H10.4598987421500482-x))
(assert (! (= (y (doc0.5248068705157151f H10.4598987421500482)) 36) :named H10.4598987421500482-y))
(assert (! (= ,(vw '(doc0.5248068705157151f H10.4598987421500482)) 525) :named H10.4598987421500482-w))
(assert (! (= ,(vh '(doc0.5248068705157151f H10.4598987421500482)) 24) :named H10.4598987421500482-h))
(assert (! (= (fgc (doc0.5248068705157151f H10.4598987421500482)) (color |#x555753|)) :named H10.4598987421500482-fg))
(assert (! (= (bgc (doc0.5248068705157151f H10.4598987421500482)) transparent) :named H10.4598987421500482-bg))
(assert (! (= (x (doc0.5248068705157151f P0.3226454785829057)) 691) :named P0.3226454785829057-x))
(assert (! (= (y (doc0.5248068705157151f P0.3226454785829057)) 72) :named P0.3226454785829057-y))
(assert (! (= ,(vw '(doc0.5248068705157151f P0.3226454785829057)) 525) :named P0.3226454785829057-w))
(assert (! (= ,(vh '(doc0.5248068705157151f P0.3226454785829057)) 90) :named P0.3226454785829057-h))
(assert (! (= (fgc (doc0.5248068705157151f P0.3226454785829057)) (color |#x2e3436|)) :named P0.3226454785829057-fg))
(assert (! (= (bgc (doc0.5248068705157151f P0.3226454785829057)) transparent) :named P0.3226454785829057-bg))
(assert (! (= (x (doc0.5248068705157151f P0.008074930785098244)) 691) :named P0.008074930785098244-x))
(assert (! (= (y (doc0.5248068705157151f P0.008074930785098244)) 169.5) :named P0.008074930785098244-y))
(assert (! (= ,(vw '(doc0.5248068705157151f P0.008074930785098244)) 525) :named P0.008074930785098244-w))
(assert (! (= ,(vh '(doc0.5248068705157151f P0.008074930785098244)) 108) :named P0.008074930785098244-h))
(assert (! (= (fgc (doc0.5248068705157151f P0.008074930785098244)) (color |#x2e3436|)) :named P0.008074930785098244-fg))
(assert (! (= (bgc (doc0.5248068705157151f P0.008074930785098244)) transparent) :named P0.008074930785098244-bg))
(assert (! (= (x (doc0.5248068705157151f svg0.7647780787335617)) 753.5) :named svg0.7647780787335617-x))
(assert (! (= (y (doc0.5248068705157151f svg0.7647780787335617)) 300) :named svg0.7647780787335617-y))
(assert (! (= ,(vw '(doc0.5248068705157151f svg0.7647780787335617)) 400) :named svg0.7647780787335617-w))
(assert (! (= ,(vh '(doc0.5248068705157151f svg0.7647780787335617)) 100) :named svg0.7647780787335617-h))
(assert (! (= (fgc (doc0.5248068705157151f svg0.7647780787335617)) (color |#x2e3436|)) :named svg0.7647780787335617-fg))
(assert (! (= (bgc (doc0.5248068705157151f svg0.7647780787335617)) transparent) :named svg0.7647780787335617-bg))
(assert (! (= (x (doc0.5248068705157151f P0.02088725063448682)) 691) :named P0.02088725063448682-x))
(assert (! (= (y (doc0.5248068705157151f P0.02088725063448682)) 422.5) :named P0.02088725063448682-y))
(assert (! (= ,(vw '(doc0.5248068705157151f P0.02088725063448682)) 525) :named P0.02088725063448682-w))
(assert (! (= ,(vh '(doc0.5248068705157151f P0.02088725063448682)) 54) :named P0.02088725063448682-h))
(assert (! (= (fgc (doc0.5248068705157151f P0.02088725063448682)) (color |#x2e3436|)) :named P0.02088725063448682-fg))
(assert (! (= (bgc (doc0.5248068705157151f P0.02088725063448682)) transparent) :named P0.02088725063448682-bg))
(assert (! (= (x (doc0.5248068705157151f svg0.37078069035747596)) 753.5) :named svg0.37078069035747596-x))
(assert (! (= (y (doc0.5248068705157151f svg0.37078069035747596)) 499) :named svg0.37078069035747596-y))
(assert (! (= ,(vw '(doc0.5248068705157151f svg0.37078069035747596)) 400) :named svg0.37078069035747596-w))
(assert (! (= ,(vh '(doc0.5248068705157151f svg0.37078069035747596)) 100) :named svg0.37078069035747596-h))
(assert (! (= (fgc (doc0.5248068705157151f svg0.37078069035747596)) (color |#x2e3436|)) :named svg0.37078069035747596-fg))
(assert (! (= (bgc (doc0.5248068705157151f svg0.37078069035747596)) transparent) :named svg0.37078069035747596-bg))
(assert (! (= (x (doc0.5248068705157151f P0.11882632446010155)) 691) :named P0.11882632446010155-x))
(assert (! (= (y (doc0.5248068705157151f P0.11882632446010155)) 621.5) :named P0.11882632446010155-y))
(assert (! (= ,(vw '(doc0.5248068705157151f P0.11882632446010155)) 525) :named P0.11882632446010155-w))
(assert (! (= ,(vh '(doc0.5248068705157151f P0.11882632446010155)) 162) :named P0.11882632446010155-h))
(assert (! (= (fgc (doc0.5248068705157151f P0.11882632446010155)) (color |#x2e3436|)) :named P0.11882632446010155-fg))
(assert (! (= (bgc (doc0.5248068705157151f P0.11882632446010155)) transparent) :named P0.11882632446010155-bg))
(assert (! (= (x (doc0.5248068705157151f P0.1298648258053663)) 691) :named P0.1298648258053663-x))
(assert (! (= (y (doc0.5248068705157151f P0.1298648258053663)) 791) :named P0.1298648258053663-y))
(assert (! (= ,(vw '(doc0.5248068705157151f P0.1298648258053663)) 525) :named P0.1298648258053663-w))
(assert (! (= ,(vh '(doc0.5248068705157151f P0.1298648258053663)) 111.0) :named P0.1298648258053663-h))
(assert (! (= (fgc (doc0.5248068705157151f P0.1298648258053663)) (color |#x2e3436|)) :named P0.1298648258053663-fg))
(assert (! (= (bgc (doc0.5248068705157151f P0.1298648258053663)) transparent) :named P0.1298648258053663-bg))
(assert (! (= (x (doc0.5248068705157151f P0.716431879403056)) 691) :named P0.716431879403056-x))
(assert (! (= (y (doc0.5248068705157151f P0.716431879403056)) 909.5) :named P0.716431879403056-y))
(assert (! (= ,(vw '(doc0.5248068705157151f P0.716431879403056)) 525) :named P0.716431879403056-w))
(assert (! (= ,(vh '(doc0.5248068705157151f P0.716431879403056)) 126) :named P0.716431879403056-h))
(assert (! (= (fgc (doc0.5248068705157151f P0.716431879403056)) (color |#x2e3436|)) :named P0.716431879403056-fg))
(assert (! (= (bgc (doc0.5248068705157151f P0.716431879403056)) transparent) :named P0.716431879403056-bg))


,@(make-dom 'html0.18301249708546008 'doc0.6239921629050075
            '([<BODY> BODY0.19015932397580182 BODY-rule]
              ([<DIV> DIV0.7637197250902594 DIV-rule]
               ([<H1> H10.28974101702980914 H1-rule])
               ([<P> P0.16207905194293148 P-rule])
               ([<P> P0.629630742665913 P-rule]
                ([<DIV> DIV0.21656597036186365 DIV-rule]))
               ([<svg> svg0.2976033045295612 svg-rule]))))


(assert (! (= (w (doc0.6239921629050075f html0.18301249708546008)) 1920) :named html0.18301249708546008-width))
(assert (! (= (x (doc0.6239921629050075f BODY0.19015932397580182)) 683.5) :named BODY0.19015932397580182-x))
(assert (! (= (y (doc0.6239921629050075f BODY0.19015932397580182)) 36) :named BODY0.19015932397580182-y))
(assert (! (= ,(vw '(doc0.6239921629050075f BODY0.19015932397580182)) 540) :named BODY0.19015932397580182-w))
(assert (! (= ,(vh '(doc0.6239921629050075f BODY0.19015932397580182)) 729.5) :named BODY0.19015932397580182-h))
(assert (! (= (fgc (doc0.6239921629050075f BODY0.19015932397580182)) (color |#x2e3436|)) :named BODY0.19015932397580182-fg))
(assert (! (= (bgc (doc0.6239921629050075f BODY0.19015932397580182)) transparent) :named BODY0.19015932397580182-bg))
(assert (! (= (x (doc0.6239921629050075f DIV0.7637197250902594)) 691) :named DIV0.7637197250902594-x))
(assert (! (= (y (doc0.6239921629050075f DIV0.7637197250902594)) 36) :named DIV0.7637197250902594-y))
(assert (! (= ,(vw '(doc0.6239921629050075f DIV0.7637197250902594)) 525) :named DIV0.7637197250902594-w))
(assert (! (= ,(vh '(doc0.6239921629050075f DIV0.7637197250902594)) 632.0) :named DIV0.7637197250902594-h))
(assert (! (= (fgc (doc0.6239921629050075f DIV0.7637197250902594)) (color |#x2e3436|)) :named DIV0.7637197250902594-fg))
(assert (! (= (bgc (doc0.6239921629050075f DIV0.7637197250902594)) transparent) :named DIV0.7637197250902594-bg))
(assert (! (= (x (doc0.6239921629050075f H10.28974101702980914)) 691) :named H10.28974101702980914-x))
(assert (! (= (y (doc0.6239921629050075f H10.28974101702980914)) 36) :named H10.28974101702980914-y))
(assert (! (= ,(vw '(doc0.6239921629050075f H10.28974101702980914)) 525) :named H10.28974101702980914-w))
(assert (! (= ,(vh '(doc0.6239921629050075f H10.28974101702980914)) 48) :named H10.28974101702980914-h))
(assert (! (= (fgc (doc0.6239921629050075f H10.28974101702980914)) (color |#x555753|)) :named H10.28974101702980914-fg))
(assert (! (= (bgc (doc0.6239921629050075f H10.28974101702980914)) transparent) :named H10.28974101702980914-bg))
(assert (! (= (x (doc0.6239921629050075f P0.16207905194293148)) 691) :named P0.16207905194293148-x))
(assert (! (= (y (doc0.6239921629050075f P0.16207905194293148)) 96) :named P0.16207905194293148-y))
(assert (! (= ,(vw '(doc0.6239921629050075f P0.16207905194293148)) 525) :named P0.16207905194293148-w))
(assert (! (= ,(vh '(doc0.6239921629050075f P0.16207905194293148)) 56) :named P0.16207905194293148-h))
(assert (! (= (fgc (doc0.6239921629050075f P0.16207905194293148)) (color |#x2e3436|)) :named P0.16207905194293148-fg))
(assert (! (= (bgc (doc0.6239921629050075f P0.16207905194293148)) transparent) :named P0.16207905194293148-bg))
(assert (! (= (x (doc0.6239921629050075f P0.629630742665913)) 691) :named P0.629630742665913-x))
(assert (! (= (y (doc0.6239921629050075f P0.629630742665913)) 159.5) :named P0.629630742665913-y))
(assert (! (= ,(vw '(doc0.6239921629050075f P0.629630742665913)) 525) :named P0.629630742665913-w))
(assert (! (= ,(vh '(doc0.6239921629050075f P0.629630742665913)) 86.0) :named P0.629630742665913-h))
(assert (! (= (fgc (doc0.6239921629050075f P0.629630742665913)) (color |#x2e3436|)) :named P0.629630742665913-fg))
(assert (! (= (bgc (doc0.6239921629050075f P0.629630742665913)) transparent) :named P0.629630742665913-bg))
(assert (! (= (x (doc0.6239921629050075f DIV0.21656597036186365)) 691) :named DIV0.21656597036186365-x))
(assert (! (= (y (doc0.6239921629050075f DIV0.21656597036186365)) 192.5) :named DIV0.21656597036186365-y))
(assert (! (= ,(vw '(doc0.6239921629050075f DIV0.21656597036186365)) 525) :named DIV0.21656597036186365-w))
(assert (! (= ,(vh '(doc0.6239921629050075f DIV0.21656597036186365)) 52.96665954589844) :named DIV0.21656597036186365-h))
(assert (! (= (fgc (doc0.6239921629050075f DIV0.21656597036186365)) (color |#x2e3436|)) :named DIV0.21656597036186365-fg))
(assert (! (= (bgc (doc0.6239921629050075f DIV0.21656597036186365)) transparent) :named DIV0.21656597036186365-bg))
(assert (! (= (x (doc0.6239921629050075f svg0.2976033045295612)) 753.5) :named svg0.2976033045295612-x))
(assert (! (= (y (doc0.6239921629050075f svg0.2976033045295612)) 268.0) :named svg0.2976033045295612-y))
(assert (! (= ,(vw '(doc0.6239921629050075f svg0.2976033045295612)) 400) :named svg0.2976033045295612-w))
(assert (! (= ,(vh '(doc0.6239921629050075f svg0.2976033045295612)) 400) :named svg0.2976033045295612-h))
(assert (! (= (fgc (doc0.6239921629050075f svg0.2976033045295612)) (color |#x2e3436|)) :named svg0.2976033045295612-fg))
(assert (! (= (bgc (doc0.6239921629050075f svg0.2976033045295612)) transparent) :named svg0.2976033045295612-bg))


,@(make-dom 'html0.485322886867534 'doc0.14827423594904332
            '([<BODY> BODY0.9213003132099014 BODY-rule]
              ([<DIV> DIV0.7021023273141278 DIV-rule]
               ([<H1> H10.24797700450152427 H1-rule])
               ([<P> P0.03704867496653108 P-rule])
               ([<DIV> DIV0.14986256875920956 DIV-rule]
                ([<PRE> PRE0.3964381768359234 PRE-rule]))
               ([<P> P0.6309865722454228 P-rule])
               ([<DIV> DIV0.17723263169965442 DIV-rule]
                ([<PRE> PRE0.2787984916766305 PRE-rule]))
               ([<P> P0.7223836491984981 P-rule])
               ([<DIV> DIV0.06250306167345265 DIV-rule]
                ([<PRE> PRE0.15654645799211775 PRE-rule])))))


(assert (! (= (w (doc0.14827423594904332f html0.485322886867534)) 1920) :named html0.485322886867534-width))
(assert (! (= (x (doc0.14827423594904332f BODY0.9213003132099014)) 683.5) :named BODY0.9213003132099014-x))
(assert (! (= (y (doc0.14827423594904332f BODY0.9213003132099014)) 36) :named BODY0.9213003132099014-y))
(assert (! (= ,(vw '(doc0.14827423594904332f BODY0.9213003132099014)) 540) :named BODY0.9213003132099014-w))
(assert (! (= ,(vh '(doc0.14827423594904332f BODY0.9213003132099014)) 520.5) :named BODY0.9213003132099014-h))
(assert (! (= (fgc (doc0.14827423594904332f BODY0.9213003132099014)) (color |#x2e3436|)) :named BODY0.9213003132099014-fg))
(assert (! (= (bgc (doc0.14827423594904332f BODY0.9213003132099014)) transparent) :named BODY0.9213003132099014-bg))
(assert (! (= (x (doc0.14827423594904332f DIV0.7021023273141278)) 691) :named DIV0.7021023273141278-x))
(assert (! (= (y (doc0.14827423594904332f DIV0.7021023273141278)) 36) :named DIV0.7021023273141278-y))
(assert (! (= ,(vw '(doc0.14827423594904332f DIV0.7021023273141278)) 525) :named DIV0.7021023273141278-w))
(assert (! (= ,(vh '(doc0.14827423594904332f DIV0.7021023273141278)) 420) :named DIV0.7021023273141278-h))
(assert (! (= (fgc (doc0.14827423594904332f DIV0.7021023273141278)) (color |#x2e3436|)) :named DIV0.7021023273141278-fg))
(assert (! (= (bgc (doc0.14827423594904332f DIV0.7021023273141278)) transparent) :named DIV0.7021023273141278-bg))
(assert (! (= (x (doc0.14827423594904332f H10.24797700450152427)) 691) :named H10.24797700450152427-x))
(assert (! (= (y (doc0.14827423594904332f H10.24797700450152427)) 36) :named H10.24797700450152427-y))
(assert (! (= ,(vw '(doc0.14827423594904332f H10.24797700450152427)) 525) :named H10.24797700450152427-w))
(assert (! (= ,(vh '(doc0.14827423594904332f H10.24797700450152427)) 24) :named H10.24797700450152427-h))
(assert (! (= (fgc (doc0.14827423594904332f H10.24797700450152427)) (color |#x555753|)) :named H10.24797700450152427-fg))
(assert (! (= (bgc (doc0.14827423594904332f H10.24797700450152427)) transparent) :named H10.24797700450152427-bg))
(assert (! (= (x (doc0.14827423594904332f P0.03704867496653108)) 691) :named P0.03704867496653108-x))
(assert (! (= (y (doc0.14827423594904332f P0.03704867496653108)) 72) :named P0.03704867496653108-y))
(assert (! (= ,(vw '(doc0.14827423594904332f P0.03704867496653108)) 525) :named P0.03704867496653108-w))
(assert (! (= ,(vh '(doc0.14827423594904332f P0.03704867496653108)) 18) :named P0.03704867496653108-h))
(assert (! (= (fgc (doc0.14827423594904332f P0.03704867496653108)) (color |#x2e3436|)) :named P0.03704867496653108-fg))
(assert (! (= (bgc (doc0.14827423594904332f P0.03704867496653108)) transparent) :named P0.03704867496653108-bg))
(assert (! (= (x (doc0.14827423594904332f DIV0.14986256875920956)) 691) :named DIV0.14986256875920956-x))
(assert (! (= (y (doc0.14827423594904332f DIV0.14986256875920956)) 108) :named DIV0.14986256875920956-y))
(assert (! (= ,(vw '(doc0.14827423594904332f DIV0.14986256875920956)) 525) :named DIV0.14986256875920956-w))
(assert (! (= ,(vh '(doc0.14827423594904332f DIV0.14986256875920956)) 51) :named DIV0.14986256875920956-h))
(assert (! (= (fgc (doc0.14827423594904332f DIV0.14986256875920956)) (color |#x2e3436|)) :named DIV0.14986256875920956-fg))
(assert (! (= (bgc (doc0.14827423594904332f DIV0.14986256875920956)) transparent) :named DIV0.14986256875920956-bg))
(assert (! (= (x (doc0.14827423594904332f PRE0.3964381768359234)) 691) :named PRE0.3964381768359234-x))
(assert (! (= (y (doc0.14827423594904332f PRE0.3964381768359234)) 108) :named PRE0.3964381768359234-y))
(assert (! (= ,(vw '(doc0.14827423594904332f PRE0.3964381768359234)) 525) :named PRE0.3964381768359234-w))
(assert (! (= ,(vh '(doc0.14827423594904332f PRE0.3964381768359234)) 51) :named PRE0.3964381768359234-h))
(assert (! (= (fgc (doc0.14827423594904332f PRE0.3964381768359234)) (color |#x2e3436|)) :named PRE0.3964381768359234-fg))
(assert (! (= (bgc (doc0.14827423594904332f PRE0.3964381768359234)) transparent) :named PRE0.3964381768359234-bg))
(assert (! (= (x (doc0.14827423594904332f P0.6309865722454228)) 691) :named P0.6309865722454228-x))
(assert (! (= (y (doc0.14827423594904332f P0.6309865722454228)) 184.5) :named P0.6309865722454228-y))
(assert (! (= ,(vw '(doc0.14827423594904332f P0.6309865722454228)) 525) :named P0.6309865722454228-w))
(assert (! (= ,(vh '(doc0.14827423594904332f P0.6309865722454228)) 18) :named P0.6309865722454228-h))
(assert (! (= (fgc (doc0.14827423594904332f P0.6309865722454228)) (color |#x2e3436|)) :named P0.6309865722454228-fg))
(assert (! (= (bgc (doc0.14827423594904332f P0.6309865722454228)) transparent) :named P0.6309865722454228-bg))
(assert (! (= (x (doc0.14827423594904332f DIV0.17723263169965442)) 691) :named DIV0.17723263169965442-x))
(assert (! (= (y (doc0.14827423594904332f DIV0.17723263169965442)) 220.5) :named DIV0.17723263169965442-y))
(assert (! (= ,(vw '(doc0.14827423594904332f DIV0.17723263169965442)) 525) :named DIV0.17723263169965442-w))
(assert (! (= ,(vh '(doc0.14827423594904332f DIV0.17723263169965442)) 123) :named DIV0.17723263169965442-h))
(assert (! (= (fgc (doc0.14827423594904332f DIV0.17723263169965442)) (color |#x2e3436|)) :named DIV0.17723263169965442-fg))
(assert (! (= (bgc (doc0.14827423594904332f DIV0.17723263169965442)) transparent) :named DIV0.17723263169965442-bg))
(assert (! (= (x (doc0.14827423594904332f PRE0.2787984916766305)) 691) :named PRE0.2787984916766305-x))
(assert (! (= (y (doc0.14827423594904332f PRE0.2787984916766305)) 220.5) :named PRE0.2787984916766305-y))
(assert (! (= ,(vw '(doc0.14827423594904332f PRE0.2787984916766305)) 525) :named PRE0.2787984916766305-w))
(assert (! (= ,(vh '(doc0.14827423594904332f PRE0.2787984916766305)) 123) :named PRE0.2787984916766305-h))
(assert (! (= (fgc (doc0.14827423594904332f PRE0.2787984916766305)) (color |#x2e3436|)) :named PRE0.2787984916766305-fg))
(assert (! (= (bgc (doc0.14827423594904332f PRE0.2787984916766305)) transparent) :named PRE0.2787984916766305-bg))
(assert (! (= (x (doc0.14827423594904332f P0.7223836491984981)) 691) :named P0.7223836491984981-x))
(assert (! (= (y (doc0.14827423594904332f P0.7223836491984981)) 369) :named P0.7223836491984981-y))
(assert (! (= ,(vw '(doc0.14827423594904332f P0.7223836491984981)) 525) :named P0.7223836491984981-w))
(assert (! (= ,(vh '(doc0.14827423594904332f P0.7223836491984981)) 18) :named P0.7223836491984981-h))
(assert (! (= (fgc (doc0.14827423594904332f P0.7223836491984981)) (color |#x2e3436|)) :named P0.7223836491984981-fg))
(assert (! (= (bgc (doc0.14827423594904332f P0.7223836491984981)) transparent) :named P0.7223836491984981-bg))
(assert (! (= (x (doc0.14827423594904332f DIV0.06250306167345265)) 691) :named DIV0.06250306167345265-x))
(assert (! (= (y (doc0.14827423594904332f DIV0.06250306167345265)) 405) :named DIV0.06250306167345265-y))
(assert (! (= ,(vw '(doc0.14827423594904332f DIV0.06250306167345265)) 525) :named DIV0.06250306167345265-w))
(assert (! (= ,(vh '(doc0.14827423594904332f DIV0.06250306167345265)) 51) :named DIV0.06250306167345265-h))
(assert (! (= (fgc (doc0.14827423594904332f DIV0.06250306167345265)) (color |#x2e3436|)) :named DIV0.06250306167345265-fg))
(assert (! (= (bgc (doc0.14827423594904332f DIV0.06250306167345265)) transparent) :named DIV0.06250306167345265-bg))
(assert (! (= (x (doc0.14827423594904332f PRE0.15654645799211775)) 691) :named PRE0.15654645799211775-x))
(assert (! (= (y (doc0.14827423594904332f PRE0.15654645799211775)) 405) :named PRE0.15654645799211775-y))
(assert (! (= ,(vw '(doc0.14827423594904332f PRE0.15654645799211775)) 525) :named PRE0.15654645799211775-w))
(assert (! (= ,(vh '(doc0.14827423594904332f PRE0.15654645799211775)) 51) :named PRE0.15654645799211775-h))
(assert (! (= (fgc (doc0.14827423594904332f PRE0.15654645799211775)) (color |#x2e3436|)) :named PRE0.15654645799211775-fg))
(assert (! (= (bgc (doc0.14827423594904332f PRE0.15654645799211775)) transparent) :named PRE0.15654645799211775-bg))


(check-sat)

  
)))
